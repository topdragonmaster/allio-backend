# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type AssetClass {
  active: Boolean!
  createdAt: DateTime!
  description: String!
  id: ID!
  name: String!
  updatedAt: DateTime!
}

input CategoryFilterItem {
  category: StaticAssetCategory!
  orderList: [Int!]
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

"""Supported funding frequencies"""
enum FundingFrequency {
  Biweekly
  Monthly
  Weekly
}

"""Supported funding methods"""
enum FundingMethod {
  OneTime
  Recurring
  RoundUp
}

input FundingMethodInput {
  method: FundingMethod
  plaidLinkedItem: UserPlaidLinkedItemInput
  recurringFundingSetting: RecurringFundingSettingInput
  userFundingMethodId: ID
  userPlaidLinkedItemId: ID
}

type InvestmentQuestionnaire {
  active: Boolean!
  category: InvestmentQuestionnaireCategory!
  createdAt: DateTime!
  id: ID!
  name: String!
  options: [InvestmentQuestionnaireOption!]!
  order: Int!
  question: String!
  updatedAt: DateTime!
}

"""supported investment questionnaire types"""
enum InvestmentQuestionnaireCategory {
  Risk
  Value
}

type InvestmentQuestionnaireOption {
  active: Boolean!
  createdAt: DateTime!
  description: String!
  id: ID!
  option: String!
  order: Int!
  updatedAt: DateTime!
}

type InvestmentValue {
  active: Boolean!
  createdAt: DateTime!
  description: String!
  id: ID!
  investmentValue: String!
  updatedAt: DateTime!
}

type ManagementWorkflow {
  active: Boolean!
  createdAt: DateTime!
  description: String!
  id: ID!
  key: ManagementWorkflowKey!
  name: String!
  updatedAt: DateTime!
}

"""supported management workflow key"""
enum ManagementWorkflowKey {
  Full
  Partial
  Self
}

type Mutation {
  setStaticAssetList(staticAssetInputList: [StaticAssetAllocationInput!]!): [StaticAssetResponseItem!]!
  setUserAssetClassList(assetClassIdList: [String!]!, userId: String): SetUserAssetClassListResponse!
  setUserFundingMethod(fundingMethodList: [FundingMethodInput!]!, userId: String): [SetUserFundingMethodResponse!]!
  setUserInvestmentQuestionnaireAnswer(answer: String, questionnaireId: String!, selectedOptionIdList: [String!], userId: String): [UserInvestmentQuestionnaireAnswer!]!
  setUserManagementWorkflow(managementWorkflowId: String!, userId: String): UserManagementWorkflow!
}

type Query {
  getAllQuestionnaire(id: ID): [InvestmentQuestionnaire!]!
  getAssetClassList(idList: [String!]): [AssetClass!]!
  getManagementWorkflowList(idList: [String!]): [ManagementWorkflow!]!
  getStaticAssetList(categoryList: [CategoryFilterItem!], nameList: [String!], typeList: [TypeStaticAsset!]): [StaticAssetResponseItem!]!
  getUserAssetClassList(userId: String): [AssetClass!]!
  getUserInvestmentQuestionnaireAnswers(questionnaireId: String, userId: String): [UserInvestmentQuestionnaireAnswer!]!
  getUserInvestmentValueList(userId: String): [UserInvestmentValue!]!
  getUserManagementWorkflow(userId: String): ManagementWorkflow
  getUserRecommendedPortfolio(userId: String): [UserRecommendedPortfolio!]!
  getUserRiskLevel(userId: String): UserRiskLevel!
}

input RecurringFundingSettingInput {
  amount: Float!
  frequency: FundingFrequency!
}

type RecurringFundingSettingResponse {
  amount: Float!
  frequency: FundingFrequency!
  id: ID!
  lastTransactionId: String
  transactionStartDate: DateTime
}

type RiskLevel {
  active: Boolean!
  createdAt: DateTime!
  description: String!
  id: ID!
  riskLevel: Int!
  updatedAt: DateTime!
}

"""available user roles"""
enum Roles {
  Admin
}

type SetUserAssetClassListResponse {
  assetClassList: [AssetClass!]
  userId: String
}

type SetUserFundingMethodResponse {
  id: ID!
  method: FundingMethod!
  plaidLinkedItem: UserPlaidLinkedItemResponse!
  recurringFundingSetting: RecurringFundingSettingResponse
}

type StaticAsset {
  description: String!
  id: ID!
  name: String!
  tag: [String!]!
  url: String
}

input StaticAssetAllocationInput {
  asset: StaticAssetInput
  category: StaticAssetCategory
  description: String
  id: ID
  name: String
  order: Int
  role: [Roles!]
  tag: [String!]
  type: TypeStaticAsset
}

"""supported static asset category"""
enum StaticAssetCategory {
  Splash
}

input StaticAssetInput {
  description: String!
  name: String!
  s3Bucket: String
  s3Tag: String
  tag: [String!]
}

type StaticAssetResponseItem {
  asset: StaticAsset!
  category: StaticAssetCategory!
  description: String!
  id: ID!
  name: String!
  order: Int!
  tag: [String!]!
  type: TypeStaticAsset!
}

"""possible type of static asset"""
enum TypeStaticAsset {
  Animation
  Image
  Text
}

type UserInvestmentQuestionnaireAnswer {
  active: Boolean!
  answer: String
  createdAt: DateTime!
  id: ID!
  questionnaireId: String!
  selectedOptionId: String
  updatedAt: DateTime!
  userId: String!
}

type UserInvestmentValue {
  active: Boolean!
  createdAt: DateTime!
  id: ID!
  investmentValue: InvestmentValue!
  updatedAt: DateTime!
  userId: String!
}

type UserManagementWorkflow {
  active: Boolean!
  createdAt: DateTime!
  id: ID!
  managementWorkflow: ManagementWorkflow!
  updatedAt: DateTime!
  userId: String!
}

input UserPlaidLinkedItemInput {
  plaidAccountId: String!
  plaidInstitutionId: String!
  plaidPublicToken: String!
}

type UserPlaidLinkedItemResponse {
  accountId: String!
  accountMask: String!
  accountName: String!
  accountSubtype: String!
  accountType: String!
  id: ID!
  institutionId: String!
  institutionName: String!
  itemId: String!
  verificationStatus: String
}

type UserRecommendedPortfolio {
  active: Boolean!
  asset: String!
  createdAt: DateTime!
  id: ID!
  updatedAt: DateTime!
  userId: String!
  weight: Float!
}

type UserRiskLevel {
  active: Boolean!
  createdAt: DateTime!
  id: ID!
  riskLevel: RiskLevel!
  updatedAt: DateTime!
  userId: String!
}
